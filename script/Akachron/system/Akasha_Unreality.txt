#include "/script/Akachron/lib/include_system.txt"



float _humes = 0.005; //unit of realness - 1.0 is "baseline", currently defaults to 0.5 for testing purposes
int _numActiveEffects = 0;

@Initialize
{
	_Main();
}

@MainLoop
{
	yield;
}

@Event
{
	//TODO: Events to manually trigger a specific effect
	//and probably an event to set the hume level because using common data for that is probably teeeeeechnically jank?
}

task _Main()
{
	loop
	{
		_humes = GetCommonData("HUME_LEVEL", _humes);
		
		if(_humes < 1.0 & rand(-0.01, _humes * (_numActiveEffects + 0.1)) < 0.1)
		{
			_DeadRegion(_humes);
		}
		
		yield;
	}
}

task _DeadRegion(float thresh_)
{	
	string renderTarg = "RENDERTARGET_SCREENSHOT";
	CreateRenderTarget(renderTarg);
	
	//SetInvalidRenderPriorityA1(0.0, 0.21);
	//SetInvalidRenderPriorityA1(0.27, 1.0);
	
	float lower = 0.0;
	float upper = 1.0;
	
	SetInvalidRenderPriorityA1(lower, upper);
	RenderToTextureA1(renderTarg, lower, upper, true);
	ClearInvalidRenderPriority();

	//string path = DIR_SYSTEM ~ "/img/temp.png";
	//SaveRenderedTextureA1(renderTarg, path);
	
	//SaveSnapShotA1(path);
	
	int prim = ObjPrim_Create(OBJ_PRIMITIVE_2D);
	ObjPrim_SetPrimitiveType(prim, PRIMITIVE_TRIANGLELIST);
	ObjPrim_SetVertexCount(prim, 3);
	ObjPrim_SetTexture(prim, renderTarg);
	//Obj_SetRenderPriority(prim, 0.81);
	//Obj_SetRenderPriority(prim, objPri);
	
	float centerX = rand(0, GetScreenWidth());
	float centerY = rand(0, GetScreenHeight());
	
	float offsetX = rand(-10, 10);
	float offsetY = rand(-10, 10);

	Obj_SetRenderPriority(prim, 1.0);
	
	float[] xVerts = [];
	float[] yVerts = [];
	ascent(i in 0..3)
	{
		float th = rand(i * 120, (i+1) * 120);
		float r = rand(10, 100);
		
		xVerts = xVerts ~ [ centerX + r * cos(th) ];
		yVerts = yVerts ~ [ centerY + r * sin(th) ];
		
		ObjPrim_SetVertexPosition(prim, i, xVerts[i] + offsetX, yVerts[i] + offsetY, 0);
		ObjPrim_SetVertexUVT(prim, i, xVerts[i], yVerts[i]);
	}
	
	
	_numActiveEffects++;
	
	while(_humes <= thresh_ && (rand(0, 1000) > 1))
	{
		yield;
	}
	
	Obj_Delete(prim);
	_numActiveEffects--;
}